{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/Button/Button.js","services/picturesApi.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","query","handlePictureChange","evt","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","info","props","onSubmit","className","this","type","onChange","name","autoComplete","autoFocus","placeholder","Component","defaultProps","ImageGalleryItem","pictures","onClick","map","picture","src","webformatURL","alt","tags","id","Loader","color","height","width","timeout","Button","fetchPicture","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","error","status","getPicturesAfterNewSearch","a","picturesApi","hits","catch","getPicturesFromNextPage","picturesArray","prevState","autoScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handleLoadMore","prevProps","message","length","Modal","handleKeyDown","e","code","onClose","handleOverlayClick","target","addEventListener","removeEventListener","modalPicture","largeImageURL","App","pictureQuery","showModal","handleFormSubmit","openModal","closeModal","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6cc48ef4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Searchbar.css';\n\nclass Searchbar extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n      onSubmit: PropTypes.func,\n  };\n\n  state = {\n    query: '',\n  };\n\n  handlePictureChange = (evt) => {\n    this.setState({query: evt.currentTarget.value.toLowerCase()});\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if(this.state.query.trim() === '') {\n        return toast.info('Write down something to find a picture');\n    };\n\n    this.props.onSubmit(this.state.query);\n    this.setState({query: ''});\n  };\n\n  render() {\n    return (\n        <header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n                \n                <input\n                    className=\"SearchForm-input\"\n                    onChange={this.handlePictureChange}\n                    type=\"text\"\n                    name=\"query\"\n                    value={this.state.query}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                />\n            </form>\n        </header>\n    );\n  }\n}\n\nexport default Searchbar;","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css'\n\nfunction ImageGalleryItem ({pictures, onClick}) {\n    return (\n        pictures.map(picture => (\n            <li key={picture.id} className=\"ImageGalleryItem\">\n                <img onClick={() => onClick(picture)} src={picture.webformatURL} alt={picture.tags} className=\"ImageGalleryItem-image\" />\n            </li>\n        )) \n    )\n};\n\nImageGalleryItem.propTypes = {\n    picture: PropTypes.arrayOf(PropTypes.object),\n    onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;","import React from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport LoaderSpinner from \"react-loader-spinner\";\nimport './Loader.css';\n\nexport default function Loader () {\n    return (\n        <div className=\"Loader\">\n            <LoaderSpinner\n                type=\"Circles\"\n                color=\"#3f51b5\"\n                height={100}\n                width={100}\n                timeout={5000}\n                margin-left={300} \n            />\n        </div>\n        \n    );\n} \n\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button ({onClick}) {\n    return (\n        <button \n            onClick={onClick}\n            className=\"Button\" \n            type=\"button\">\n                Load more\n        </button> \n    )\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Button;","export default function fetchPicture (query, page) {\n    return fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=22334944-1a4c27752b28577a34c92f730&image_type=photo&orientation=horizontal&per_page=12`)\n    .then(response => {\n        if(response.ok) {\n            return response.json()\n        }\n        return Promise.reject(new Error(`There are no pictures with ${query}`));\n    });\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loader from '../../components/Loader';\nimport Button from '../Button';\nimport picturesApi from '../../services/picturesApi';\nimport './ImageGallery.css';\n\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    query: PropTypes.string,\n    openModal: PropTypes.func,\n  };\n\n  state = {\n    pictures: [],\n    error: null,\n    page: 1,\n    status: 'idle',\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n      if(prevProps.query !== this.props.query) {\n        this.setState({status: 'pending', pictures: [], page: 1});\n        await this.getPicturesAfterNewSearch();\n        this.autoScroll();\n      }\n      if(prevState.page !== this.state.page && this.state.page > 1) {\n        this.setState({status: 'pending-ready'});\n        await this.getPicturesFromNextPage();\n        this.autoScroll();\n      }\n  };\n  \n  getPicturesAfterNewSearch = async () => {\n     await picturesApi(this.props.query, this.state.page)\n      .then(pictures => {\n        this.setState({pictures: pictures.hits, status: 'resolved'});\n      })\n      .catch(error => this.setState({error, status: 'rejected'}));\n  };\n\n  getPicturesFromNextPage = async () => {\n    await picturesApi(this.props.query, this.state.page)\n      .then(pictures => {\n          const picturesArray = pictures.hits;\n          this.setState((prevState) => ({pictures: [...prevState.pictures, ...picturesArray], status: 'resolved'}));\n      })\n      .catch(error => this.setState({error, status: 'rejected'}));\n  };\n\n  autoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  handleLoadMore = () => {\n      this.setState((prevState) =>{\n          return {page: prevState.page + 1}\n      })\n  };\n\n  render() {\n      const {status, pictures, error} = this.state;\n\n      if(status === 'idle') {\n          return <div className=\"Warning\">Write down the word to start searching for pictures</div>\n      }\n\n      if(status === 'pending') {\n          return <Loader />\n      }\n\n      if(status === 'pending-ready') {\n        return (\n          <>\n            <ul className=\"ImageGallery\">\n                <ImageGalleryItem pictures={pictures} onClick={this.props.onClick}/>\n            </ul>\n            <Loader />\n          </>\n        )\n      }\n\n      if(status === 'rejected') {\n        return toast.error(error.message)\n      }\n\n      if(status === 'resolved') {\n        return (\n            <>\n            <ul className=\"ImageGallery\">\n                <ImageGalleryItem pictures={pictures} onClick={this.props.onClick}/>\n            </ul>\n\n            {pictures.length > 0 \n                ? <Button onClick={this.handleLoadMore} /> \n                : <div className=\"Warning\">You have to write down right word for search</div>}\n            </>\n        )\n      }\n\n  }\n};\n\nexport default ImageGallery;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nclass Modal extends Component {\n  static propTypes = {\n    modalPicture: PropTypes.object,\n    onClose: PropTypes.func,\n  };\n\n  componentDidMount () {\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  };\n\n  handleKeyDown = (e) => {\n    if(e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = (e) => {\n    if(e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const {modalPicture} = this.props;\n    return (\n        <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n            <div className=\"Modal\">\n                <img className=\"Modal__Picture\" src={modalPicture.largeImageURL} alt={modalPicture.tags} />\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\n\nimport './App.css';\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    pictureQuery: '',\n    showModal: false,\n    modalPicture: '',\n  };\n\n  handleFormSubmit = (pictureQuery) => {\n    this.setState({pictureQuery});\n  };\n\n  openModal = (modalPicture) => {\n    this.setState({\n      showModal: true,\n      modalPicture,\n    })\n  } \n\n  closeModal = () => {\n    this.setState({showModal: false})\n  };\n\n  render() {\n    const { pictureQuery, showModal, modalPicture } = this.state;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery query={pictureQuery} onClick={this.openModal}/>\n        {showModal && <Modal modalPicture={modalPicture} onClose={this.closeModal}/>}\n        <ToastContainer position=\"top-center\" autoClose={2000}/>\n      </div>\n    )\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}